version: 2.1
orbs:
  slack: circleci/slack@3.4.2
executors:
  default:
    docker:
      - image: cimg/node:10.20.1
    environment:
      TZ: Asia/Tokyo

commands:
  install-node-packages:
    steps:
      - restore_cache:
          keys:
            - v1-npm-deps-{{ arch }}-{{ checksum "yarn.lock" }}
      - run:
          name: install-packages
          command: yarn install --frozen-lockfile
      - save_cache:
          paths:
            - node_modules
          key: v1-npm-deps-{{ arch }}-{{ checksum "yarn.lock" }}
  deploy-prod:
    steps:
      - deploy:
          name: deploy app into production
          command: npx netlify-cli@v2.41.0 deploy --dir=./dist --prod
      - slack/status:
          success_message: ":white_check_mark: ${CIRCLE_BRANCH} ブランチのデプロイが完了しました。 <https://covid19-aomori.info/|https://covid19-aomori.info/>"
          failure_message: ":x: ${CIRCLE_BRANCH} ブランチのデプロイが失敗しました。"
  deploy-preview:
    steps:
      - deploy:
          name: deploy app into preview
          command: |
            npx netlify-cli@v2.41.0 deploy --dir=./dist --json | jq -r '.deploy_url' > deploy_url.txt
            echo "export DEPLOY_URL=$(cat deploy_url.txt)" >> $BASH_ENV
      - slack/status:
          success_message: ":white_check_mark: ${CIRCLE_BRANCH} ブランチのデプロイが完了しました。 <${DEPLOY_URL}|Preview Page>"
          failure_message: ":x: ${CIRCLE_BRANCH} ブランチのデプロイが失敗しました。"

jobs:
  deploy:
    executor:
      name: default
    steps:
      - checkout
      - install-node-packages
      - run:
          name: fetch-latest-data
          command: |
            curl -sL https://github.com/covid19-aomori/go-datasetgen/releases/latest/download/datasetgen_Linux_x86_64 -o datasetgen
            chmod +x datasetgen
            ./datasetgen > data/data.json
      - run:
          name: fetch-latest-news
          command: |
            sudo apt-get update && sudo apt-get install nkf -y
            chmod +x scripts/get_news.sh
            scripts/get_news.sh > data/news.json
      - run:
          name: generate
          command: yarn run generate:deploy --fail-on-page-error

workflows:
  deploy:
    jobs:
      - deploy:
          name: deploy-prod
          post-steps:
            - deploy-prod
          filters:
            branches:
              only: master
      - deploy:
          name: deploy-preview
          post-steps:
            - deploy-preview
          filters:
            branches:
              ignore: master
  schedule_deploy:
    triggers:
      - schedule:
          cron: "0 0,3,8,13 * * *"
          filters:
            branches:
              only: master
    jobs:
      - deploy:
          name: scheduled-deploy-prod
          post-steps:
            - deploy-prod
